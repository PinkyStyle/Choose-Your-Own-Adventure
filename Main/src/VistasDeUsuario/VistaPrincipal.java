package VistasDeUsuario;


import ControladorDeUsuario.ControladorVistaConstructor;
import ControladorDeUsuario.ControladorVistaJugador;
import ModuloDeCreacionLibroJuego.Artefacto;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author felip
 */
public class VistaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public VistaPrincipal() {
        cvc = new ControladorVistaConstructor();
        cvj = new ControladorVistaJugador();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setText("Autor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton3.setText("Jugador");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("               Que eres?");
        jLabel1.setToolTipText("");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/autor.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Jugador.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(133, 133, 133))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.getContentPane().removeAll(); 
        this.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.repaint();
        this.setLayout(null);
        
        
        if (flag1 == true) {
            this.imagen = new JLabel();
            this.imagen.setBounds(0, 0,172,172);
            this.jPanel1.add(this.imagen);
            this.pack();
            this.repaint();
        }
        
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        JLabel jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        JLabel jLabel5 = new javax.swing.JLabel();
        JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        JButton jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel1.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        this.jPanel1.add(this.imagen);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //jTextField1ActionPerformed(evt);
            }
        });
        
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Crea un libro juego");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("                Autor");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("                  TÃ­tulo");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("      Imagen (Opcional)");
        

        jButton1.setText("Elegir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int a= 172;
                cargarImagen(evt,a,a);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Sinopsis");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Crear");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Salir");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Sinopsis");
        
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("CREAR ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearLibroJuego(evt);
                
                //jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("SALIR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 50, Short.MAX_VALUE))
                                    .addComponent(jTextField1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1))
                                .addGap(26, 26, 26)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
        
        

        /*jButton4 = new JButton();
        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        
        VistaAutor va = new VistaAutor();
        va.setBounds(0, 0, 600, 500);
        jButton4.setBounds(470, 550, 100, 30);
        add(va);
        add(jButton4);
 
        this.setVisible(true);  */

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.getContentPane().removeAll(); 
        this.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.repaint();
        
        if (flag1 == true) {
            this.imagen = new JLabel();
            this.imagen.setBounds(0, 0,172,172);
            this.jPanel1.add(this.imagen);
            this.pack();
            this.repaint();
        }

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        JLabel jLabel5 = new javax.swing.JLabel();
        JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        JLabel jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        System.out.println("tama;o <"+this.cvj.mostrarListaLibros());
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(listaLibroJuegos (this.cvj.mostrarListaLibros())));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    //jComboBox1ActionPerformed(evt);
                    obtenerDatosLibro(evt,cvj.mostrarInformacionDeUnLibroJuego((String) jComboBox1.getSelectedItem()));
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(VistaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Elige un LibroJuego");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Autor");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Titulo");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Sinopsis");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEditable(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Empezar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    verificarInicioJuego(evt);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(VistaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            
        });
        
        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Â¿Como quieres que te reconozcan durante esta aventura?");
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Estado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack(); 
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void verificarInicioJuego(ActionEvent evt) throws FileNotFoundException{
        if (!this.jComboBox1.getSelectedItem().equals("Escoge uno")){
            if (!this.jTextField3.getText().isEmpty()) {
                this.tituloLibroJuego = (String) this.jComboBox1.getSelectedItem();
                this.cvj.iniciarJuego(this.tituloLibroJuego, this.jTextField3.getText());
                
                jugandoLibroJuego();
            }
            else{
                JOptionPane.showMessageDialog(null, "Debe ingresar su apodo para continuar","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }
               
        }
        else{
            JOptionPane.showMessageDialog(null, "Escoja un LibroJuego para continuar","Advertencia ", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void jugandoLibroJuego() throws FileNotFoundException {
        System.out.println("tipo  de pagina bryan========================================== : "+this.cvj.tipoDePagina());
        if (flag1 == true) {
            this.imagen = new JLabel();
            this.imagen.setBounds(0, 0,172,172);
            this.jPanel1.add(this.imagen);
            this.pack();
            this.repaint();
        }
        int tipo = this.cvj.tipoDePagina();
        if (tipo == 1) {
            //this.flag1=false;
            String s ="normal";
            this.jugandoPagina(s);
            this.rellenadoDatosPagina();
        }
        else{
            //System.out.println(this.cvj);
            if (tipo == -1) {
                //this.flag1=false;
                JOptionPane.showMessageDialog(null, "El Libro no fue completado correctamente, saliendo al menÃº inicial","Advertencia ", JOptionPane.WARNING_MESSAGE);
                this.getContentPane().removeAll(); 
                this.repaint();
                this.initComponents();
                ///this.jugandoPaginaNormal();
                ///this.rellenadoDatosPaginaNormal();
                
            }
            if (tipo == 4) {
                //this.flag1=false;
                String s ="bueno";
                this.jugandoPagina(s);
                this.rellenadoDatosPagina();
                //jugandoPaginaFinal();
                ///this.jugandoPaginaNormal();
                ///this.rellenadoDatosPaginaNormal();
            }
            if (tipo == 2) {
                //this.flag1=false;
                String s ="malo";
                this.jugandoPagina(s);
                this.rellenadoDatosPagina();
                //jugandoPaginaFinal();
                ///this.jugandoPaginaNormal();
                ///this.rellenadoDatosPaginaNormal();
            }
            if (tipo == 3) {
                //this.flag1=false;
                String s ="regular";
                this.jugandoPagina(s);
                this.rellenadoDatosPagina();
                //jugandoPaginaFinal();
                ///this.jugandoPaginaNormal();
                ///this.rellenadoDatosPaginaNormal();
            }
        
        }
  
    }
    
    private void jugandoPagina(String tipo){
        this.getContentPane().removeAll(); 
        this.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.repaint();
        
        if (flag1 == true) {
            this.imagen = new JLabel();
            this.imagen.setBounds(0, 0,172,172);
            this.jPanel1.add(this.imagen);
            this.pack();
            this.repaint();
        }
        
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        JLabel jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("  PÃ¡gina:");

        jTextField4.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("                            DescripciÃ³n");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Opciones");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        if (tipo.equals("normal")) {
            jButton1.setText("Siguiente");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    try {
                        //jButton1ActionPerformed(evt);
                        if (flag2==true) {
                            JOptionPane.showMessageDialog(null, "No puedes seguir avanzado ya que quemaste todos tus objetos, saliendo... ","Advertencia ", JOptionPane.WARNING_MESSAGE);
                            salirSinConfirmacion(evt);
                        }else{
                            jugandoSiguientePagina();
                        }
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(VistaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            });
        }
        else{
            if (tipo.equals("bueno")) {
                System.out.println(" entre aca final bueno puto");
                jButton1.setText("Reinicio/Salir");
                
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        try {
                            //jButton4ActionPerformed(evt);
                            //jugandoSiguientePagina();
                            reinicioSalir(evt);
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(VistaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                    }

                });
                
            }
            if (tipo.equals("malo")) {
                jButton1.setText("Salir");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        //jButton4ActionPerformed(evt);
                        //jugandoSiguientePagina();
                         salirSinConfirmacion(evt);
                    }

                });
                
            }
            if (tipo.equals("regular")) {
                jButton1.setText("Reinicio");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        try {
                            //jButton4ActionPerformed(evt);
                            //jugandoSiguientePagina();
                            reinicio(evt);
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(VistaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                });
                
            }
            
        }
        

        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField4)
                                .addGap(1, 1, 1))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        
        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(this.opcionesJugandoPagina(this.cvj.mostrarListaCaminosDePagina())));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               // jComboBox1ActionPerformed(evt);
            }
        });

        pack();
    
    }
    private void rellenadoDatosPagina() throws FileNotFoundException{
        //this.jTextField4.setText(tituloLibroJuego);
        
        this.jTextArea1.setText(this.cvj.mostrarDescripcionDePagina());
        this.jTextField4.setText(Integer.toString(this.cvj.numeroPaginaActual()));
        if (flag1 == true) {
            this.imagen = new JLabel();
            this.imagen.setBounds(0, 0,250,250);
            this.jPanel1.add(this.imagen);
            this.pack();
            this.repaint();
        }
        if (this.cvj.mostrarImagenesDePagina().get(0) != null) {
            System.out.println("direccion pagina: "+this.cvj.mostrarImagenesDePagina().get(0));
            abre = new File(this.cvj.mostrarImagenesDePagina().get(0));
            if(abre!=null){     
                FileReader archivos=new FileReader(abre);
                //this.jPanel1.remove(imagen);
                ImageIcon i = new ImageIcon(abre.getAbsolutePath()); 
                Image img = i.getImage();
                img = img.getScaledInstance(250, 250, java.awt.Image.SCALE_SMOOTH);
                i = new ImageIcon(img);
                this.imagen = new JLabel();
                this.imagen.setIcon(i);
                this.imagen.setBounds(0, 0,250,250);
                this.jPanel1.add(this.imagen);
                this.pack();
                this.repaint();
                this.flag1 = true;
            }  
        }
        
        
        
        
    }
    private String[] opcionesJugandoPagina(ArrayList<String> caminos){
        String [] opcionesJugandoPagina = new String[0];
        this.flag2 = false;
        if (caminos != null) {
            System.out.println("el tamaÃ±o del camino es: "+caminos.size());
            
            opcionesJugandoPagina = new String [caminos.size()+1];
            for (int i = 0; i < caminos.size()+1; i++) {
                if (i==0) {
                    opcionesJugandoPagina[i]="Escoge uno";
                }
                
                else{
                    System.out.println(" que esta pasando: "+caminos.get(i-1));
                    opcionesJugandoPagina[i]=caminos.get(i-1);
                }
            }   
        }else{
            if (this.cvj.tipoDePagina()== 1) {
                this.flag2 = true;
                opcionesJugandoPagina = new String[1];
                opcionesJugandoPagina[0] = "No tienes opciones vÃ¡lidas";
                //JOptionPane.showMessageDialog(null, "No puedes seguir avanzado ya que quemaste todos tus objetos, saliendo... ","Advertencia ", JOptionPane.WARNING_MESSAGE);
                //this.getContentPane().removeAll(); 
                //this.repaint();
                //this.initComponents();
            }
            if (this.cvj.tipoDePagina()== 2 || this.cvj.tipoDePagina()== 3 || this.cvj.tipoDePagina()== 4) {
                opcionesJugandoPagina = new String[1];
                opcionesJugandoPagina[0] = "Has llegado al final, no tienes caminos por recorrer";
            }
            
            //
        }
        
        return opcionesJugandoPagina;
    }
    
    private void jugandoPaginaFinal(){
        //estoy viendo como lo muestro correctamente de momento solo manda al menu principal
        //this.getContentPane().removeAll(); 
        //this.repaint();
        //this.initComponents();
    }
    
    private void jugandoSiguientePagina() throws FileNotFoundException {
        if (!this.jComboBox1.getSelectedItem().equals("Escoje uno")) {
            //siguiente pagina jugando
             System.out.println("imprimiendo desde el milla :"+ this.jComboBox1.getSelectedItem());
            int a = this.cvj.actualizarPagina((String) this.jComboBox1.getSelectedItem());
            if (a== 1) {
                System.out.println("entro");
                String s = "normal";
                this.jugandoPagina(s);
                this.rellenadoDatosPagina();
            }
            else{
                if (a == -1) {
                    JOptionPane.showMessageDialog(null, "El Libro no fue completado correctamente, saliendo al menu inicial","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    this.getContentPane().removeAll(); 
                    this.repaint();
                    this.initComponents();
                }
                if (a== 4) {
                    String s = "bueno";
                    JOptionPane.showMessageDialog(null, "Has llegado al final de la historia");
                    this.jugandoPagina(s);
                    this.rellenadoDatosPagina();
                }
                if (a== 2) {
                    String s = "malo";
                    //JOptionPane.showMessageDialog(null, "Haz llegado al final de la historia");
                    this.jugandoPagina(s);
                    this.rellenadoDatosPagina();
                }
                if (a== 3) {
                    String s = "regular";
                    //JOptionPane.showMessageDialog(null, "Haz llegado al final de la historia");
                    this.jugandoPagina(s);
                    this.rellenadoDatosPagina();
                }

            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Ingrese una opciÃ³n para continuar","Advertencia ", JOptionPane.WARNING_MESSAGE);
        }
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if (this.salirPrincipal() == 0) {
            this.getContentPane().removeAll(); 
            this.repaint();
            this.initComponents();
        }
        
        
    } 
    
    private void salirSinConfirmacion(java.awt.event.ActionEvent evt) {                                         
        
        this.getContentPane().removeAll(); 
        this.repaint();
        this.initComponents();
        
    } 
    
    
    private void reinicioSalir(java.awt.event.ActionEvent ev) throws FileNotFoundException{
        int a = opcionesRinicioSalir();
        System.out.println("salir ctmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm: "+a);
        if (a == 0) {
            this.cvj.nuevoInicio();
            jugandoLibroJuego();
        }
        else{
            this.getContentPane().removeAll(); 
            this.repaint();
            this.initComponents();
        }
    }
    
    private int opcionesRinicioSalir(){
        Object [] opciones ={"Reinicio","Salir"};
        int eleccion = JOptionPane.showOptionDialog(rootPane,"Â¿Que deseas hacer?","Mensaje de Confirmacion",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
        return eleccion;
    }
    
    private void reinicio(java.awt.event.ActionEvent ev) throws FileNotFoundException{
        this.cvj.nuevoInicio();
        jugandoLibroJuego();
    }
    
    
    private void crearLibroJuego(java.awt.event.ActionEvent evt) { 
        if (jTextField1.getText().isEmpty() || jTextField2.getText().isEmpty() || jTextArea1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //this.cvc.crearLibroJuego(jTextField1.getText(), jTextField2.getText(), imagen, jTextArea1.getText());
            System.out.println("entro");
            if (!this.cvj.mostrarListaLibros().contains(jTextField2.getText())) {
                if (flag1 == true) {
                    //agregar ruta de la imagen en el null
                    this.tituloLibroJuego=jTextField2.getText();
                    this.cvc.crearLibroJuego(jTextField1.getText(), jTextField2.getText(),abre.getAbsolutePath(), jTextArea1.getText());
                    this.imagen = new JLabel();
                    this.imagen.setBounds(0, 0,200,200);
                    this.jPanel1.add(this.imagen);
                    this.pack();
                    this.repaint();
                    flag1 = false;
                }
                else{
                    this.tituloLibroJuego=jTextField2.getText();
                    this.cvc.crearLibroJuego(jTextField1.getText(), jTextField2.getText(), null, jTextArea1.getText());
                    flag1 = false;
                }
                listModel = new DefaultListModel();
                this.paginasLibroJuego = new ArrayList<>();
                this.crearPagina();
            }
            else{
                JOptionPane.showMessageDialog(null, "El tÃ­tulo ingresado ya existe","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }
            
        }
    } 
    
    private void crearPagina(){
        this.getContentPane().removeAll(); 
        this.repaint();
        if (flag1 == true) {
            this.imagen = new JLabel();
            this.imagen.setBounds(0, 0,172,172);
            this.jPanel1.add(this.imagen);
            this.pack();
            this.repaint();
            flag1 = false;
        }
        
        
        jButton4 = new javax.swing.JButton();
        JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        JLabel jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        JLabel jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        this.jPanel1.add(this.imagen);
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        JLabel jLabel7 = new javax.swing.JLabel();
        JLabel jLabel8 = new javax.swing.JLabel();
        JLabel jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("                            DescripciÃ³n");

        jLabel2.setText("OpciÃ³n");

        jLabel3.setText("Dar artefacto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               // jButton1ActionPerformed(evt);
               int a = 200;
                cargarImagen(evt,a,a);
               
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("  PÃ¡gina:");

        jButton2.setText("Check");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check(evt);
            }
        });

        jLabel5.setText("Salto a pÃ¡gina");

        jButton3.setText("Agregar opciÃ³n");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarOpcion(evt);
            }

            
        });


        jScrollPane2.setViewportView(jList1);

        jLabel6.setText("Lista de Opciones");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //jButton5ActionPerformed(evt);
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setText("Guardar y Salir");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarYsalirLibroJuego(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setText("Siguiente pÃ¡gina");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguientePagina(evt);
            }
        });
        
        jLabel7.setText("Quitar artefacto");
        jLabel8.setText("Necesita artefacto");
        jLabel9.setText("Tipo pÃ¡gina:");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoja un tipo","Pagina normal", "Final bueno", "Final regular", "Final malo" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }

        });
        
        jTextArea1.setEditable(false);
        jTextArea1.setEnabled(false);
        jTextField1.setEditable(false);
        jTextField1.setEnabled(false);
        jTextField2.setEditable(false);
        jTextField2.setEnabled(false);
        jTextField3.setEditable(false);
        jTextField3.setEnabled(false);
        jTextField4.setEditable(false);
        jTextField4.setEnabled(false);
        jTextField5.setEditable(false);
        jTextField5.setEnabled(false);
        jTextField6.setEditable(false);
        jTextField6.setEnabled(false);
        
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane1)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(26, 26, 26)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jTextField5)
                                                    .addGap(28, 28, 28))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGap(33, 33, 33)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField6)))
                                        .addComponent(jTextField1))
                                    .addGap(26, 26, 26)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(177, 177, 177)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jTextField4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pack();
        JOptionPane.showMessageDialog(null, "Es necesario que escoja un tipo de pagina para seguir");
    
    }
    
    private void check(ActionEvent evt) {
        if (isNumero(this.jTextField3.getText())) {
            if (this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                JOptionPane.showMessageDialog(null, "Ese nÂ° de pagina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }
        }

    }
    
    private void jComboBox1ActionPerformed(ActionEvent evt) {
        System.out.println(this.jComboBox1.getSelectedItem());
        this.resetPagina();
        if (this.jComboBox1.getSelectedItem().equals("PÃ¡gina normal")) {
            jTextArea1.setEditable(true);
            jTextArea1.setEnabled(true);
            jTextField1.setEditable(true);
            jTextField1.setEnabled(true);
            jTextField2.setEditable(true);
            jTextField2.setEnabled(true);
            jTextField3.setEditable(true);
            jTextField3.setEnabled(true);
            jTextField4.setEditable(true);
            jTextField4.setEnabled(true);
            jTextField5.setEditable(true);
            jTextField5.setEnabled(true);
            jTextField6.setEditable(true);
            jTextField6.setEnabled(true);
            
        }
        if (this.jComboBox1.getSelectedItem().equals("Escoja un tipo")) {
            jTextArea1.setEditable(false);
            jTextArea1.setEnabled(false);
            jTextField1.setEditable(false);
            jTextField1.setEnabled(false);
            jTextField2.setEditable(false);
            jTextField2.setEnabled(false);
            jTextField3.setEditable(false);
            jTextField3.setEnabled(false);
            jTextField4.setEditable(false);
            jTextField4.setEnabled(false);
            jTextField5.setEditable(false);
            jTextField5.setEnabled(false);
            jTextField6.setEditable(false);
            jTextField6.setEnabled(false);
            
        }
        
        if (this.jComboBox1.getSelectedItem().equals("Final bueno")) {
            jTextArea1.setEditable(true);
            jTextArea1.setEnabled(true);
            jTextField1.setEditable(false);
            jTextField1.setEnabled(false);
            jTextField2.setEditable(true);
            jTextField2.setEnabled(true);
            jTextField3.setEditable(true);
            jTextField3.setEnabled(true);
            jTextField4.setEditable(false);
            jTextField4.setEnabled(false);
            jTextField5.setEditable(false);
            jTextField5.setEnabled(false);
            jTextField6.setEditable(false);
            jTextField6.setEnabled(false);
            
        }
        
        if (this.jComboBox1.getSelectedItem().equals("Final malo")) {
            jTextArea1.setEditable(true);
            jTextArea1.setEnabled(true);
            jTextField1.setEditable(false);
            jTextField1.setEnabled(false);
            jTextField2.setEditable(false);
            jTextField2.setEnabled(false);
            jTextField3.setEditable(true);
            jTextField3.setEnabled(true);
            jTextField4.setEditable(false);
            jTextField4.setEnabled(false);
            jTextField5.setEditable(true);
            jTextField5.setEnabled(true);
            jTextField6.setEditable(false);
            jTextField6.setEnabled(false);
            
        }
        if (this.jComboBox1.getSelectedItem().equals("Final regular")) {
            jTextArea1.setEditable(true);
            jTextArea1.setEnabled(true);
            jTextField1.setEditable(false);
            jTextField1.setEnabled(false);
            jTextField2.setEditable(false);
            jTextField2.setEnabled(false);
            jTextField3.setEditable(true);
            jTextField3.setEnabled(true);
            jTextField4.setEditable(false);
            jTextField4.setEnabled(false);
            jTextField5.setEditable(false);
            jTextField5.setEnabled(false);
            jTextField6.setEditable(false);
            jTextField6.setEnabled(false);
            
        }
    }
    
    private void resetPagina(){
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextArea1.setText("");
        listModel = new DefaultListModel();
        this.jList1.setModel(listModel);
   
    }
    
    
    private boolean isNumero(String cadena) {

        boolean resultado;
        try {
            Integer.parseInt(cadena);
            resultado = true;
        } catch (NumberFormatException excepcion) {
            resultado = false;
        }
        if (resultado==true) {
            int a = Integer.parseInt(cadena);
            if (a>0) {
                resultado = true;
            }
            else{
                resultado = false;
            }
        }
        

        return resultado;
    }
    
    private String[] listaLibroJuegos (ArrayList<String> lista){
        String [] listaLibroJuego = new String [1];
        listaLibroJuego[0]="Escoge uno";
        
        if (lista != null) {
            listaLibroJuego = new String [lista.size()+1];
            for (int i = 0; i < lista.size()+1; i++) {
                if (i==0) {
                    listaLibroJuego[i]="Escoje uno";
                }
                else{
                    listaLibroJuego[i]=lista.get(i-1);
                }
            }   
        }
        
        
        return listaLibroJuego;
    }
    
    private void obtenerDatosLibro(ActionEvent evt,ArrayList<String> datos) throws FileNotFoundException {
        //obtenerdatos()this.jComboBox1.getSelectedItem();
        if (!this.jComboBox1.getSelectedItem().equals("Escoge uno") ) {
            this.jTextField1.setText(datos.get(0));
            this.jTextField2.setText(datos.get(1));
            this.jTextArea1.setText(datos.get(2));
            this.jTextField4.setText(datos.get(4));
            //error archivco
            System.out.println(datos.get(1)+" ; "+datos.get(3));
            System.out.println("cantidad de componentes del panel "+this.jPanel1.getComponentCount());
            if (this.jPanel1.getComponentCount()==1) {
                this.jPanel1.remove(0);
                this.pack();
                this.repaint();
            }
            if (datos.get(3) != null) {
                abre = new File(datos.get(3));
                if(abre!=null){     
                    FileReader archivos=new FileReader(abre);
                    //this.jPanel1.remove(imagen);
                    ImageIcon i = new ImageIcon(abre.getAbsolutePath()); 
                    Image img = i.getImage();
                    img = img.getScaledInstance(200, 200, java.awt.Image.SCALE_SMOOTH);
                    i = new ImageIcon(img);
                    this.imagen = new JLabel();
                    this.imagen.setIcon(i);
                    this.imagen.setBounds(0, 0,200,200);
                    this.jPanel1.add(this.imagen);
                    this.pack();
                    this.repaint();
                    this.flag1 = true;
                }  
            }
            else{
                
                //System.out.println("sdflkhjsdfklsdfhjlkasdfjlkasdf nlksdfnjlkfsdasdfnlkasdfnlk;asdfnlk AQUIIIIIIIIIIIIIII CTMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
                this.imagen = new JLabel();
                this.imagen.setBounds(0, 0,200,200);
                this.jPanel1.add(this.imagen);
                this.pack();
                this.repaint();
                this.flag1 = false;
                
            }
            

        }
 
    }
    private void agregarOpcion(ActionEvent evt) {
        if (this.jComboBox1.getSelectedItem().equals("Final malo") || this.jComboBox1.getSelectedItem().equals("Final bueno") || this.jComboBox1.getSelectedItem().equals("Final regular") ) {
            JOptionPane.showMessageDialog(null, "Usted no puede agregar opciones a un final","Advertencia ", JOptionPane.WARNING_MESSAGE);
        }
        else{
            if (this.jTextField1.getText().isEmpty() || this.jTextField4.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }
            else {
                //this.jList1.get
                if (this.isNumero(this.jTextField4.getText())) {
                    if (this.validarArtefactos(this.jTextField2.getText()) && this.validarArtefactos(this.jTextField5.getText()) && this.validarArtefactos(this.jTextField6.getText())) {
                        this.jList1.setModel(listModel);
                        listModel.addElement(this.jTextField1.getText()+";"+this.jTextField4.getText()+";"+this.jTextField2.getText()+";"+this.jTextField5.getText()+";"+this.jTextField6.getText());
                        jTextField1.setText("");
                        jTextField2.setText("");
                        jTextField4.setText("");
                        jTextField5.setText("");
                        jTextField6.setText("");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Por favor no ingrese caracteres no vÃ¡lidos en los artefactos","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero vÃ¡lido en el salto de pÃ¡gina, la opciÃ³n no fue guardada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
               
            }
        }
    }
    
    private void siguientePagina(ActionEvent evt) {
        if (this.jComboBox1.getSelectedItem().equals("PÃ¡gina normal")) {
            if (this.jList1.getModel().getSize()>0 && !this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                        int a = Integer.parseInt(this.jTextField3.getText());
                        if (flag1==false) {
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"PÃ¡gina Normal",null, null);
                        }
                        else{
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"PÃ¡gina Normal",abre.getAbsolutePath(), null);
                        }
                        System.out.println("a"+a);
                        this.paginasLibroJuego.add(a);
                        for (int i = 0; i < this.listModel.size(); i++) {
                            String [] s = this.listModel.get(i).toString().split(";");
                            //System.out.println("split");
                            //for (int j = 0; j < s.length; j++) {
                            //    System.out.println(s[j]);
                            //}
                           // System.out.println("fin split");
                           // System.out.println("largo "+s.length);
                           
                            int salto = Integer.parseInt(s[1]);
                            if (s.length ==2) {
                                //Artefacto dar = new Artefacto(s[2]);
                                //Artefacto quitar = new Artefacto(s[3]);
                                //Artefacto solicitar = new Artefacto(s[4]);
                                this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], null, null, null);
                            }
                            if (s.length ==3) {
                                Artefacto dar = new Artefacto(s[2]);
                                //Artefacto quitar = new Artefacto(s[3]);
                                //Artefacto solicitar = new Artefacto(s[4]);
                                this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], dar, null, null);
                            }
                            else{
                                if (s.length ==4) {
                                    if (s[2]==null) {
                                        Artefacto quitar = new Artefacto(s[3]);
                                        //Artefacto solicitar = new Artefacto(s[4]);
                                        this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], null, quitar, null);
                                    }
                                    else{
                                        Artefacto dar = new Artefacto(s[2]);
                                        Artefacto quitar = new Artefacto(s[3]);
                                        //Artefacto solicitar = new Artefacto(s[4]);
                                        this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], dar, quitar, null);
                                    }
                                    
                                }
                                else{
                                    if (s.length ==5) {
                                        if (s[2]==null) {
                                            if (s[3]==null) {
                                                //Artefacto dar = new Artefacto(s[2]);
                                                //Artefacto quitar = new Artefacto(s[3]);
                                                Artefacto solicitar = new Artefacto(s[4]);
                                                this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], null, null, solicitar);
                                            }
                                            else{
                                                Artefacto quitar = new Artefacto(s[3]);
                                                Artefacto solicitar = new Artefacto(s[4]);
                                                this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], null, quitar, solicitar);
                                            }
                                        }
                                        else{
                                            if (s[3]==null) {
                                                Artefacto dar = new Artefacto(s[2]);
                                                Artefacto solicitar = new Artefacto(s[4]);
                                                this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], dar, null, solicitar);
                                            }
                                            else{
                                                Artefacto dar = new Artefacto(s[2]);
                                                Artefacto quitar = new Artefacto(s[3]);
                                                Artefacto solicitar = new Artefacto(s[4]);
                                                this.cvc.agregarCamino(this.tituloLibroJuego, a,salto ,s[0], dar, quitar, solicitar);
                                            }
                                        }
                                        
                                    }
                                }
                            }
                        }
                        this.cvc.caminosCreados(this.tituloLibroJuego,a);
                        this.crearPagina();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya esta creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero vÃ¡lido en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
        if (this.jComboBox1.getSelectedItem().equals("Final bueno")) {
            if (!this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con exito");
                        int a = Integer.parseInt(this.jTextField3.getText());
                        Artefacto ar = new Artefacto(this.jTextField2.getText());
                        if (flag1==false) {
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final bueno",null, ar);
                        }
                        else{
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final bueno",abre.getAbsolutePath(), ar);
                        }
                        
                        
                        this.paginasLibroJuego.add(a);
                        this.crearPagina();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
        if (this.jComboBox1.getSelectedItem().equals("Final malo")) {
            if (!this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con exito");
                        int a = Integer.parseInt(this.jTextField3.getText());
                        Artefacto ar = new Artefacto(this.jTextField5.getText());
                        if (flag1==false) {
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final malo",null, ar);
                        }
                        else{
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final malo",abre.getAbsolutePath(), ar);
                        }
                        this.paginasLibroJuego.add(a);
                        this.crearPagina();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
        if (this.jComboBox1.getSelectedItem().equals("Final regular")) {
            if (!this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                        int a = Integer.parseInt(this.jTextField3.getText());
                        if (flag1==false) {
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final regular",null, null);
                        }
                        else{
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final regular",abre.getAbsolutePath(), null);
                        }
                        this.paginasLibroJuego.add(a);
                        this.crearPagina();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
    }
    
    
    private void guardarYsalirLibroJuego(ActionEvent evt) {
        if (this.jComboBox1.getSelectedItem().equals("PÃ¡gina normal")) {
            if (this.jList1.getModel().getSize()>0 && !this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    //guardar en controlador
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        int a = Integer.parseInt(this.jTextField3.getText());
                        if (flag1==false) {
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"PÃ¡gina Normal",null, null);
                        }
                        else{
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"PÃ¡gina Normal",abre.getAbsolutePath(), null);
                        }
                        JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                        if (this.salirPrincipal() == 0) {
                            this.getContentPane().removeAll(); 
                            this.repaint();
                            this.initComponents();
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
        if (this.jComboBox1.getSelectedItem().equals("Final bueno")) {
            if (!this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    //guardar en controlador
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        int a = Integer.parseInt(this.jTextField3.getText());
                        if (this.jTextField5.getText().equals("")) {
                            if (flag1==false) {
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final bueno",null, null);
                            }
                            else{
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final bueno",abre.getAbsolutePath(), null);
                            }

                            JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                            if (this.salirPrincipal() == 0) {
                                this.getContentPane().removeAll(); 
                                this.repaint();
                                this.initComponents();
                            }
                        }
                        else{
                            Artefacto ar = new Artefacto(this.jTextField2.getText());
                            if (flag1==false) {
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final bueno",null, ar);
                            }
                            else{
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final bueno",abre.getAbsolutePath(), ar);
                            }

                            JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                            if (this.salirPrincipal() == 0) {
                                this.getContentPane().removeAll(); 
                                this.repaint();
                                this.initComponents();
                            }
                        }
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
        if (this.jComboBox1.getSelectedItem().equals("Final malo")) {
            if (!this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    //guardar en controlador
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        int a = Integer.parseInt(this.jTextField3.getText());
                        if (this.jTextField5.getText().equals("")) {
                            if (flag1==false) {
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final malo",null, null);
                            }
                            else{
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final malo",abre.getAbsolutePath(), null);
                            }

                            JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                            if (this.salirPrincipal() == 0) {
                                this.getContentPane().removeAll(); 
                                this.repaint();
                                this.initComponents();
                            }
                        }
                        else{
                            Artefacto ar = new Artefacto(this.jTextField5.getText());
                            if (flag1==false) {
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final malo",null, ar);
                            }
                            else{
                                this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final malo",abre.getAbsolutePath(), ar);
                            }

                            JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                            if (this.salirPrincipal() == 0) {
                                this.getContentPane().removeAll(); 
                                this.repaint();
                                this.initComponents();
                            }
                        
                        }
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
        if (this.jComboBox1.getSelectedItem().equals("Final regular")) {
            if (!this.jTextArea1.getText().isEmpty() && !this.jTextField3.getText().isEmpty()) {
                if (this.isNumero(this.jTextField3.getText())) {
                    if (!this.paginasLibroJuego.contains(Integer.parseInt(this.jTextField3.getText()))) {
                        int a = Integer.parseInt(this.jTextField3.getText());
                        if (flag1==false) {
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final regular",null, null);
                        }
                        else{
                            this.cvc.crearPagina(this.tituloLibroJuego, a,this.jTextArea1.getText(),"Final regular",abre.getAbsolutePath(), null);
                        }
                        
                        JOptionPane.showMessageDialog(null, "La pÃ¡gina fue guardada con Ã©xito");
                        if (this.salirPrincipal() == 0) {
                            this.getContentPane().removeAll(); 
                            this.repaint();
                            this.initComponents();
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Ese nÂ° de pÃ¡gina ya estÃ¡ creada","Advertencia ", JOptionPane.WARNING_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero en la pÃ¡gina","Advertencia ", JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Rellene todos los campos obligatorios","Advertencia ", JOptionPane.WARNING_MESSAGE);
            }  
        }
        if (this.jComboBox1.getSelectedItem().equals("Escoja un tipo")){
            if (this.salirPrincipal() == 0) {
                this.getContentPane().removeAll(); 
                this.repaint();
                this.initComponents();
            }
        }
        
        
    }
     
    private void cargarImagen(java.awt.event.ActionEvent evt, int ancho, int largo){
        
        flag1 = false;
        try{
            
            JFileChooser file = new JFileChooser();
            file.showOpenDialog(this);
            abre = file.getSelectedFile();
            if(abre!=null){     
                FileReader archivos=new FileReader(abre);
                String tipo = file.getTypeDescription(abre);
                if(!(("Archivo JPG").equals(tipo) || ("Archivo PNG").equals(tipo))){
                    JOptionPane.showMessageDialog(null, "El tipo del archivo no era una imagen", "Mensaje de advertencia", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                this.jPanel1.remove(imagen);
                ImageIcon i = new ImageIcon(abre.getAbsolutePath()); 
                Image img = i.getImage();
                img = img.getScaledInstance(ancho, largo, java.awt.Image.SCALE_SMOOTH);
                i = new ImageIcon(img);
                this.imagen = new JLabel();
                this.imagen.setIcon(i);
                this.imagen.setBounds(0, 0,ancho,largo);
                this.jPanel1.add(this.imagen);
                this.pack();
                this.repaint();
                flag1 = true;
            }    
        }
        catch(IOException ex){
            JOptionPane.showMessageDialog(null,ex+"" + "\nNo se ha encontrado el archivo", "ADVERTENCIA!!!",JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (flag1) {
            JOptionPane.showMessageDialog(null, "La imagen fue guardada con Ã©xito");
        }
        else{
            JOptionPane.showMessageDialog(null, "El evento fue cancelado");
        }
        
    }
    
    
    
    private int salirPrincipal(){
        Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane,"Â¿En realidad desea salir a la ventana principal?","Mensaje de Confirmacion",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
        return eleccion;
    }
    
    private boolean validarArtefactos(String cadena){
        boolean string =true;
        System.out.println("cadena artefacto; "+cadena);
        for (int i = 0; i < cadena.length(); i++) {
            if ((cadena.codePointAt(i)>=65 && cadena.codePointAt(i)<=90) || (cadena.codePointAt(i)>=97 && cadena.codePointAt(i)<=123) || (cadena.codePointAt(i)==32) || (cadena.codePointAt(i)>=48 && cadena.codePointAt(i)<=57) || (cadena.codePointAt(i)==00)) {
                //return string =false;
                System.out.println("artefaco bueno ");
            }
            else{
                System.out.println("artefaco malo ");
                return string =false;
            }
        }
        
        return string;
    }
    
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel jPanel1 ;
    private boolean flag1 = false;
    
    private javax.swing.JLabel imagen = new JLabel();
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton jButton2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private DefaultListModel listModel;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JComboBox<String> jComboBox1;
    
    private ArrayList<Integer> paginasLibroJuego;
    
    /// controladores
    private final ControladorVistaConstructor cvc;
    private final ControladorVistaJugador cvj;
    private String tituloLibroJuego;
    private File abre;
    private boolean flag2 = false;
}
